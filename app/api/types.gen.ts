// This file is auto-generated by @hey-api/openapi-ts

/**
 * Model for a flowmeter sensor.
 */
export type Flowmeter = {
    setpoint?: (number | null);
    type?: 'flowmeter';
    unit?: string;
    id: number;
    current_reading?: (SensorReading | null);
};

export enum type {
    FLOWMETER = 'flowmeter'
}

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * Model representing a proportional valve actuator.
 */
export type ProportionalValve = {
    type?: 'proportional valve';
    id: number;
    state: number;
    current_position?: (number | null);
};

export enum type2 {
    PROPORTIONAL_VALVE = 'proportional valve'
}

/**
 * Model representing a pump actuator.
 */
export type Pump = {
    type?: 'pump';
    id: number;
    state: boolean;
};

export enum type3 {
    PUMP = 'pump'
}

/**
 * Base model for an sensor.
 */
export type Sensor = {
    setpoint?: (number | null);
    type: SensorEnum;
    unit: string;
    id: number;
    current_reading?: (SensorReading | null);
};

/**
 * Enumeration for different types of sensors.
 */
export enum SensorEnum {
    FLOWMETER = 'flowmeter'
}

/**
 * Base model for a sensor reading.
 */
export type SensorReading = {
    value: number;
    /**
     * Timestamp of the reading in nanoseconds since Epoch
     */
    timestamp_ns: number;
};

export type Setpoint = {
    setpoint?: (number | null);
};

/**
 * Model representing a solenoid valve actuator.
 */
export type SolenoidValve = {
    type?: 'solenoid valve';
    id: number;
    state: boolean;
};

export enum type4 {
    SOLENOID_VALVE = 'solenoid valve'
}

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type GetAllActuatorsV1ActuatorsGetResponse = (Array<(SolenoidValve | ProportionalValve | Pump)>);

export type GetAllActuatorsV1ActuatorsGetError = unknown;

export type GetAllV1ActuatorsSolenoidGetResponse = (Array<SolenoidValve>);

export type GetAllV1ActuatorsSolenoidGetError = unknown;

export type GetByIdV1ActuatorsSolenoidActuatorIdGetData = {
    path: {
        actuator_id: number;
    };
};

export type GetByIdV1ActuatorsSolenoidActuatorIdGetResponse = (SolenoidValve);

export type GetByIdV1ActuatorsSolenoidActuatorIdGetError = (HTTPValidationError);

export type SetStateV1ActuatorsSolenoidSetPostData = {
    body: SolenoidValve;
};

export type SetStateV1ActuatorsSolenoidSetPostResponse = (SolenoidValve);

export type SetStateV1ActuatorsSolenoidSetPostError = (HTTPValidationError);

export type GetAllV1ActuatorsProportionalGetResponse = (Array<ProportionalValve>);

export type GetAllV1ActuatorsProportionalGetError = unknown;

export type GetByIdV1ActuatorsProportionalActuatorIdGetData = {
    path: {
        actuator_id: number;
    };
};

export type GetByIdV1ActuatorsProportionalActuatorIdGetResponse = (ProportionalValve);

export type GetByIdV1ActuatorsProportionalActuatorIdGetError = (HTTPValidationError);

export type SetStateV1ActuatorsProportionalSetPostData = {
    body: ProportionalValve;
};

export type SetStateV1ActuatorsProportionalSetPostResponse = (ProportionalValve);

export type SetStateV1ActuatorsProportionalSetPostError = (HTTPValidationError);

export type GetAllV1ActuatorsPumpGetResponse = (Array<Pump>);

export type GetAllV1ActuatorsPumpGetError = unknown;

export type GetByIdV1ActuatorsPumpActuatorIdGetData = {
    path: {
        actuator_id: number;
    };
};

export type GetByIdV1ActuatorsPumpActuatorIdGetResponse = (Pump);

export type GetByIdV1ActuatorsPumpActuatorIdGetError = (HTTPValidationError);

export type SetStateV1ActuatorsPumpSetPostData = {
    body: Pump;
};

export type SetStateV1ActuatorsPumpSetPostResponse = (Pump);

export type SetStateV1ActuatorsPumpSetPostError = (HTTPValidationError);

export type GetAllSensorsV1SensorsGetResponse = (Array<Flowmeter>);

export type GetAllSensorsV1SensorsGetError = unknown;

export type GetAllV1SensorsFlowmetersGetResponse = (Array<Sensor>);

export type GetAllV1SensorsFlowmetersGetError = unknown;

export type GetByIdV1SensorsFlowmetersSensorIdGetData = {
    path: {
        sensor_id: number;
    };
};

export type GetByIdV1SensorsFlowmetersSensorIdGetResponse = (Sensor);

export type GetByIdV1SensorsFlowmetersSensorIdGetError = (HTTPValidationError);

export type PostReadingV1SensorsFlowmetersSensorIdReadingPostData = {
    body: SensorReading;
    path: {
        sensor_id: number;
    };
};

export type PostReadingV1SensorsFlowmetersSensorIdReadingPostResponse = (Sensor);

export type PostReadingV1SensorsFlowmetersSensorIdReadingPostError = (HTTPValidationError);

export type PostSetpointV1SensorsFlowmetersSensorIdSetpointPostData = {
    body: Setpoint;
    path: {
        sensor_id: number;
    };
};

export type PostSetpointV1SensorsFlowmetersSensorIdSetpointPostResponse = (Sensor);

export type PostSetpointV1SensorsFlowmetersSensorIdSetpointPostError = (HTTPValidationError);

export type GetVersionV1InfoVersionGetResponse = (string);

export type GetVersionV1InfoVersionGetError = unknown;

export type RootGetResponse = (unknown);

export type RootGetError = unknown;